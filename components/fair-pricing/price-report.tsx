"use client"

import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer'
import { format } from 'date-fns'

const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#FFFFFF',
    fontFamily: 'Helvetica',
  },
  header: {
    marginBottom: 20,
  },
  title: {
    fontSize: 24,
    marginBottom: 8,
    color: '#065F46',
  },
  subtitle: {
    fontSize: 14,
    color: '#374151',
    marginBottom: 16,
  },
  section: {
    marginBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#E5E7EB',
    paddingBottom: 8,
  },
  sectionTitle: {
    fontSize: 16,
    marginBottom: 8,
    color: '#065F46',
  },
  row: {
    flexDirection: 'row',
    marginBottom: 4,
    paddingVertical: 4,
  },
  label: {
    flex: 1,
    fontSize: 12,
    color: '#374151',
  },
  value: {
    flex: 1,
    fontSize: 12,
    color: '#065F46',
    textAlign: 'right',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: 'center',
    fontSize: 10,
    color: '#6B7280',
  },
})

interface PriceReportProps {
  data: {
    currentPrice: number
    marketPrice: number
    fairTradeMinimum: number
    organicPremium: number
    qualityPremium: number
    certifications: Array<{
      name: string
      premium: number
    }>
  }
}

export function PriceReport({ data }: PriceReportProps) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* Header */}
        <View style={styles.header}>
          <Text style={styles.title}>Fair Price Report</Text>
          <Text style={styles.subtitle}>
            Generated on {format(new Date(), 'MMMM d, yyyy')}
          </Text>
        </View>

        {/* Current Price Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Current Prices</Text>
          <View style={styles.row}>
            <Text style={styles.label}>Kinasa Fair Price</Text>
            <Text style={styles.value}>€{data.currentPrice.toFixed(2)}/kg</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Market Price</Text>
            <Text style={styles.value}>€{data.marketPrice.toFixed(2)}/kg</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Fair Trade Minimum</Text>
            <Text style={styles.value}>€{data.fairTradeMinimum.toFixed(2)}/kg</Text>
          </View>
        </View>

        {/* Premium Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Price Premiums</Text>
          <View style={styles.row}>
            <Text style={styles.label}>Organic Premium</Text>
            <Text style={styles.value}>€{data.organicPremium.toFixed(2)}/kg</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Quality Premium</Text>
            <Text style={styles.value}>€{data.qualityPremium.toFixed(2)}/kg</Text>
          </View>
        </View>

        {/* Certifications Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Certification Premiums</Text>
          {data.certifications.map((cert, index) => (
            <View key={index} style={styles.row}>
              <Text style={styles.label}>{cert.name}</Text>
              <Text style={styles.value}>€{cert.premium.toFixed(2)}/kg</Text>
            </View>
          ))}
        </View>

        {/* Price Impact */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Price Impact</Text>
          <View style={styles.row}>
            <Text style={styles.label}>Premium over Market Price</Text>
            <Text style={styles.value}>
              +{((data.currentPrice / data.marketPrice - 1) * 100).toFixed(1)}%
            </Text>
          </View>
        </View>

        {/* Footer */}
        <Text style={styles.footer}>
          Generated by Kinasa Fair Pricing System • {format(new Date(), 'PP')}
        </Text>
      </Page>
    </Document>
  )
}
